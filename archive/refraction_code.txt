// ----------------------------------------------------------------------------------
// OPTIMISATION: over 95% reflection, total reflection.
// Not much changed.
// ----------------------------------------------------------------------------------
if (opacity < .05) {
	
	current_color = texture(image_skybox, reflect(I, N)).xyz;

} else {

	// Refraction
	vec3 refracted_dir      = refract(I, N, 1.0f / water_optical_index);
	float total_distance    = distance_to_water * abs(floor_level - camera_position.z) / abs(camera_position.z - fragment.position.z);
	vec2 projected          = refracted_dir.xy * total_distance; // Refrac ted direction projected onto expected 
	vec3 refracted_color    = texture(texture_sand, (camera_position.xy + projected) * sand_texture_scale).xyz;
	refracted_color         = water_attenuation(refracted_color, total_distance - distance_to_water); // Atenuation

	// Reflection (no attenuation)
	vec3 reflected_color    = texture(image_skybox, reflect(I, N)).xyz;

	current_color = mix(refracted_color, reflected_color, 1 - opacity);
}
